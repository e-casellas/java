import java.util.*;

public class Main {
    public static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        startProgram();
    }

    public static void separateChars(String string) {
        String separatedString = "";
        for (int i = 0; i < string.length(); i++) {
            separatedString = separatedString + string.charAt(i) + " ";
        }

        System.out.println("\n" + separatedString);
    }

    public static void stringToBinary(String string) {
        System.out.println("The result:");
        for (int i = 0; i < string.length(); i++) {
            System.out.println(string.charAt(i) + " = " +
                    String.format("%7s", Integer.toBinaryString(string.charAt(i))).replace(' ', '0'));
        }
    }

    public static void chuckNorrisThis () {
        String binaryString = "";
        String result = "";
        int counter = 1;
        System.out.println("Input string:");
        String string = sc.nextLine();

        for (int i = 0; i < string.length(); i++) {
            binaryString = binaryString + String.format("%7s", Integer.toBinaryString(string.charAt(i))).replace(' ', '0');
        }

        for (int i = 0; i < binaryString.length(); i++) {
            if (binaryString.charAt(i) == '1') {
                    result = result + "0 ";
            } else {
                    result = result + "00 ";
            }

            while (i + 1 < binaryString.length() && binaryString.charAt(i) == binaryString.charAt(i + 1)) {
                counter++;
                i++;
            }

            for (int j = 0; j < counter; j++) {
                result = result + "0";
            }

            counter = 1;
            result = result + " ";
        }

        System.out.println("Encoded string:\n" + result + "\n");
    }

    public static void unChuckNorrisThis () {
        String result = "";
        String finalResult = "";
        char binaryToChar;
        System.out.println("Input encoded string:");
        String simpleString = sc.nextLine();
        String[] string = simpleString.split(" ");

        for (int i = 0; i < simpleString.length(); i++) {
            if (simpleString.charAt(i) != '0' && simpleString.charAt(i) != ' ') {
                System.out.println("Encoded string is not valid.\n");
                return;
            }
        }

        if (string.length % 2 != 0) {
            System.out.println("Encoded string is not valid.\n");
            return;
        }

        for (int i = 0; i < string.length; i += 2) {
            if (Objects.equals(string[i], "0") || Objects.equals(string[i], "00")) {
                continue;
            } else {
                System.out.println("Encoded string is not valid.\n");
                return;
            }
        }

        for (int i = 0; i < string.length; i += 2) {
            if (Objects.equals(string[i], "0")) {
                result = result + string[i + 1].replace("0", "1");
            } else {
                result = result + string[i + 1];
            }
        }

        for (int i = 0; i < result.length(); i += 7) {
            try {
                binaryToChar = (char) Integer.parseInt(result.substring(i, i + 7), 2);
                finalResult = finalResult + binaryToChar;
            } catch (Exception e) {
                System.out.println("Encoded string is not valid.\n");
                return;
            }
        }

        System.out.println("Decoded string:\n" + finalResult + "\n");
    }

    public static void startProgram () {
        String userInput = "";

        while (!Objects.equals(userInput, "exit")) {
            System.out.println("Please input operation (encode/decode/exit):");
            userInput = sc.nextLine();

            switch (userInput) {
                case "encode":
                    chuckNorrisThis();
                    break;
                case "decode":
                    unChuckNorrisThis();
                    break;
                case "exit":
                    System.out.println("Bye!");
                    break;
                default:
                    System.out.println("There is no " + "'" + userInput + "' operation");
            }
        }
    }
}
